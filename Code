<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Homework Reminder</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
      background-color: #f5f5f5;
    }
    h1 {
      text-align: center;
    }
    .form-container {
      margin-bottom: 20px;
      text-align: center;
    }
    input, textarea {
      padding: 10px;
      margin: 5px;
      width: 80%;
      max-width: 400px;
    }
    button {
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      cursor: pointer;
    }
    button:hover {
      background-color: #45a049;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    table, th, td {
      border: 1px solid #ccc;
    }
    th, td {
      padding: 10px;
      text-align: center;
    }
    th {
      background-color: #f0f0f0;
    }
  </style>
</head>
<body>
  <h1>Homework Reminder</h1>
  
  <div class="form-container">
    <input type="text" id="title" placeholder="Homework Title" />
    <textarea id="description" placeholder="Description"></textarea>
    <input type="date" id="due-date" />
    <button onclick="addAssignment()">Add Assignment</button>
  </div>

  <table>
    <thead>
      <tr>
        <th>Title</th>
        <th>Description</th>
        <th>Due Date</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="assignment-list">
      <!-- Assignments will be listed here -->
    </tbody>
  </table>

  <script>
    const assignments = [];

    // Function to render the assignments list
    function renderAssignments() {
      const listElement = document.getElementById('assignment-list');
      listElement.innerHTML = '';  // Clear the table

      assignments.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate)); // Sort by due date

      assignments.forEach((assignment, index) => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${assignment.title}</td>
          <td>${assignment.description}</td>
          <td>${assignment.dueDate}</td>
          <td><button onclick="deleteAssignment(${index})">Delete</button></td>
        `;
        listElement.appendChild(row);
      });
    }

    // Function to add a new assignment
    function addAssignment() {
      const title = document.getElementById('title').value;
      const description = document.getElementById('description').value;
      const dueDate = document.getElementById('due-date').value;

      if (!title || !description || !dueDate) {
        alert('Please fill out all fields!');
        return;
      }

      const newAssignment = { title, description, dueDate };
      assignments.push(newAssignment);
      renderAssignments();

      // Clear input fields after adding
      document.getElementById('title').value = '';
      document.getElementById('description').value = '';
      document.getElementById('due-date').value = '';

      setReminder(newAssignment);  // Set a reminder for the new assignment
    }

    // Function to delete an assignment
    function deleteAssignment(index) {
      assignments.splice(index, 1);
      renderAssignments();
    }

    // Function to set a reminder for an assignment
    function setReminder(assignment) {
      const dueDate = new Date(assignment.dueDate);
      const currentDate = new Date();
      const timeUntilDue = dueDate - currentDate;  // Time in milliseconds

      // If the due date is in the future
      if (timeUntilDue > 0) {
        setTimeout(() => {
          alert(`Reminder: The assignment "${assignment.title}" is due today!`);
        }, timeUntilDue);
      }
    }
  </script>
</body>
</html>
